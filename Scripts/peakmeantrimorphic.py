"""
Script used to generate Figure 5.5, which illustrates the modal and average fraction
of slow genes achieved after a large number of time steps for the trimorphic multilevel 
model for competition between fast, slow, and dimer replicators. This figure also provides 
a comparison with the analytically calculated modal composition at steady state for the
dimorphic competition on the fast-dimer edge of the simplex, as well as the numerically
computed mean fraction of slow genes for the steady state on the fast-dimer edge.

This figure depicts a case in which the all-dimer composition is a maximizer of the
collective reproduction rate ($\eta = 1$), and presents the mean and modal compositions
for a variety of levels of between-protocell competition.

This figure uses data from the files "Gplottrimorphiceta1.txt" ($\eta = 1$,left panel)
and "Gplottrimorphiceta0p7.txt" ($\eta = 0.7, right panel) in the Simulation_Outputs
folder, which is generated by running the script "loopfvtrimorphic.py" in the
Scripts folder. The figure also uses data generated from the script
"FDmeancalculation.py" for both cases.
"""


import matplotlib.pyplot as plt
import numpy as np
import scipy.integrate as spi
import os

s = 1.
eta = 1.
theta = 1.

"""
Analytical formula for modal composition at steady state for the multilevel dynamics on
the fast-diemr edge of the simplex.
"""

def peak_FD(s,eta,lamb,theta):
	b_F = 1 + s
	b_D = (1.0+s) / (2.0 + s)
	lambtilde = lamb / (2.0 * (b_F - b_D))
	
	a = 0.25 * lambtilde * eta
	b = -0.5 * lambtilde + 2.
	c = 0.5 * lambtilde * (1.0 - 0.5 * eta) - theta - 1.
	
	possible = (-b - np.sqrt((b**2) - 4.0 * a * c)) / (2.0 * a)
	possibilities = [possible, 0.]
	return np.max(possibilities)

"""
Function to take in lines from data files and prepare them as Python lists.
"""	
def process(list):
	list = list.split(',')
	list = [float(a) for a in list]
	return list
	
"""
Protocell-level replication rate trimorphic model.
"""	
def G(x,y,z,eta):
	return (x + 0.5 * z) * ((1.0 - eta) * x + y + (1.0 - 0.5 * eta) * z)
	
script_folder = os.getcwd()
protocell_folder = os.path.dirname(script_folder)	
file = protocell_folder + "/Simulation_Outputs/peakplottrimorphiceta1.txt"


"""
Reading in data for modal composition of states achieved from numerical simulation 
after large for the $\eta = 1$ case, which is taken from the file
"Gplottrimorphiceta1.py". 
"""
f = open(file, 'r+')
lamb_list = f.readline()
#print lamb_list
lamb_list = process(lamb_list)

peak_list = f.readline()
peak_list = process(peak_list)

x_mode = f.readline()
print x_mode
x_mode = process(x_mode)

y_mode = f.readline()
print y_mode
y_mode = process(y_mode)

plt.figure(1)

"""
Plot of comparison of fraction of slow genes at modal composition achieved after numerical
simulation of the trimorphic model after many time steps and the modal fraction of slows 
genes achieved in the steady states on the fast-dimer edge of the simplex.
"""
	
peak_FD_holder = [0.5 * peak_FD(s,eta,lamb,theta) for lamb in lamb_list]


plt.plot(lamb_list, peak_list, lw = 6., color = 'b', label = r"$x + \frac{z}{2}$ at Modal Composition (Trimorphic)")
plt.plot(lamb_list,peak_FD_holder, lw = 6., color = 'r', ls = '--', label = r"Modal $\frac{1}{2} \hat{z}_{FD}$: FD Edge (Dimorphic)")

plt.axhline(y = 0.5, lw = 6., ls = '--', alpha = 0.9, color = 'k')
plt.annotate(r"All-Dimer Protocell Composition", xy = (10.,0.515), color = 'k', fontsize = 20.)

plt.xlabel(r"Cell-Level Selection Strength ($\lambda$)", fontsize = 20., labelpad = 10.)
plt.ylabel(r"Fraction of Slow Genes ($x + \frac{z}{2}$)", fontsize = 20.)

plt.legend(loc = "lower right", frameon = False, prop = {"size" : 18})

plt.xticks(fontsize = 16.)
plt.yticks(fontsize = 16.)

plt.axis([0.0,lamb_list[-1] + 1.0,0.0,0.6])

plt.tight_layout()

plt.savefig(protocell_folder + '/Figures/peakplottrimorphiceta1.png')



"""
Plot of comparison of fraction of slow genes at modal composition achieved after numerical
simulation of the trimorphic model after many time steps and the modal fraction of slows 
genes achieved in the steady states on the fast-dimer edge of the simplex.
"""

plt.figure(2)

"""
Reading in mean fraction of slow genes achieved after a large number of steps for 
numerical solutions to the trimorphic multilevel competition.
"""

file = protocell_folder + "/Simulation_Outputs/meanplottrimorphiceta1.txt"

f = open(file, 'r+')
lamb_list = f.readline()
#print lamb_list
lamb_list = process(lamb_list)


meantri_list = f.readline()
meantri_list = process(meantri_list)

f.close()

"""
Reading in mean fraction of slow genes achieved at steady state in the dimorphic 
multilevel competition on the fast-diemr edge of simplex, calculated numerically using
the analytical expression for the steady state densities derived in Section 4.1.
"""

f2 = open(protocell_folder + "/Simulation_Outputs/FDmeanploteta1.txt", 'r+')

holder = f2.readline()

meanFD_list = f2.readline()
meanFD_list = process(meanFD_list)

meanFD_list = [0.5 * mean for mean in meanFD_list]



f2.close()



plt.plot(lamb_list,meantri_list, lw = 6., color = 'b', label = r"$\langle x + \frac{z}{2} \rangle_{u(x,y)}$ : Trimorphic")
plt.plot(lamb_list,meanFD_list, lw = 6., color = 'r', ls = '--', label = r"$\langle \frac{z}{2} \rangle_{g_{FD}(z)}$ : FD Edge")


plt.axhline(y = 0.5, lw = 6., ls = '--', alpha = 0.9, color = 'k')
plt.annotate(r"All-Dimer Protocell Composition", xy = (10.,0.515), color = 'k', fontsize = 20.)

plt.xlabel(r"Cell-Level Selection Strength ($\lambda$)", fontsize = 20., labelpad = 10.)
plt.ylabel(r"Fraction of Slow Genes ($x + \frac{z}{2}$)", fontsize = 20.)

plt.legend(loc = "lower right", frameon = False, prop = {"size" : 18})

plt.xticks(fontsize = 16.)
plt.yticks(fontsize = 16.)

plt.axis([0.0,lamb_list[-1] + 1.0,0.0,0.6])

plt.tight_layout()

plt.savefig(protocell_folder + '/Figures/meanplottrimorphiceta1.png')


plt.show()
	
	