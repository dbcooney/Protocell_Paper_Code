"""
Script used to generate Figure 5.4, which illustrates the average protocell-level fitness 
achieved after a large number of time steps for the trimorphic multilevel model for 
competition between fast, slow, and dimer replicators. This figure also provides a
comparison with the analytically calculated collective outcome at steady state for the
dimorphic competition on the fast-dimer edge of the simplex.

This figure depicts both a case in which the all-dimer composition is a maximizer of the
collective reproduction rate ($\eta = 1$, left panel) and in which collective reproduction
is maximized by a composition featuring approximately 71 percent slow genes 
($\eta = 0.7$, right panel). Each panel presents the average protocell-level fitness
for a variety of levels of between-protocell competition.

This figure uses data from the files "Gplottrimorphiceta1.txt" ($\eta = 1$,left panel)
and "Gplottrimorphiceta0p7.txt" ($\eta = 0.7, right panel) in the Simulation_Outputs
folder, which is generated by running the script "loopfvtrimorphic.py" in the
Scripts folder.
"""


import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('TkAgg')
import os


from matplotlib import rc
rc('font',**{'family':'sans-serif','sans-serif':['Helvetica']})
## for Palatino and other serif fonts use:
#rc('font',**{'family':'serif','serif':['Palatino']})
rc('text', usetex=True)

eta = 1.0

plt.figure(1)

script_folder = os.getcwd()
protocell_folder = os.path.dirname(script_folder)
file = protocell_folder + "/Simulation_Outputs/Gplottrimorphiceta1.txt"

"""
Reading in data for average protocell-level fitness for the $\eta = 1$ case from
"Gplottrimorphiceta1.py", both for numerically computed trimorphic dynamics from
"loopfvtrimorphic.py" and for the analytically calculated steady state from the
fast-dimer dimorphic model.
"""
def process(list):
	list = list.split(',')
	list = [float(a) for a in list]
	return list

f = open(file, 'r+')
lamb_list = f.readline()
lamb_list = process(lamb_list)


G_tri_list = f.readline()
G_tri_list = process(G_tri_list)

G_FD_list = f.readline()
G_FD_list = process(G_FD_list)

f.close()

print lamb_list[0]
print G_tri_list[0]
print G_FD_list[0]

print len(lamb_list)
print len(G_FD_list)
print len(G_tri_list)


lamb_max = lamb_list[-1]


"""
Plotting average protocell-level fitness as a function of relative protocell-level
replication rate $\lambda$ for the $\eta = 1$ case.
"""
plt.plot(lamb_list,G_tri_list, lw = 5., color = "b", label = r"$\langle G \rangle_{u(x,y)}$, (trimorphic)")
plt.plot(lamb_list,G_FD_list, color = 'g', lw = 5., ls = "--", label = r"$\langle G_{FD} \rangle_{g_{FD}(z)}$, (dimorphic, FD edge)")


G_alldimer =  0.5 * (1.0 - 0.5 * eta)
plt.axhline(y = G_alldimer, lw = 5.,ls = '--', color = 'k', alpha = 0.9)

plt.axis([0,lamb_max + 1.,0.,0.35])

plt.xlabel(r"Protocell-Level Selection Strength ($\lambda$)", fontsize = 20., labelpad = 10.)
plt.ylabel(r"Average Protocell-Level Fitness ($\langle G \rangle_u$)", fontsize = 20.)

plt.legend(loc = "lower right", frameon = False, prop = {"size" : 18})

plt.annotate(r"Maximal Fitness $G^*$ / All-Dimer Fitness $G(0,0)$", xy = (7.0,G_alldimer+0.0075), fontsize = 18.)

plt.xticks(fontsize = 16.)
plt.yticks(fontsize = 16.)

plt.tight_layout()


fig_file = protocell_folder + "/Figures/Gplottrimorphiceta1.png"
plt.savefig(fig_file)

plt.figure(2)

eta = 0.7


"""
Reading in data for average protocell-level fitness for the $\eta = 0.7$ case from
"Gplottrimorphiceta0p7.py", both for numerically computed trimorphic dynamics from
"loopfvtrimorphic.py" and for the analytically calculated steady state from the
fast-dimer dimorphic model.
"""

file2 = protocell_folder + "/Simulation_Outputs/Gplottrimorphiceta0p7.txt"
f2 = open(file2, 'r+')

lamb_list2 = f2.readline()
print len(lamb_list2)
lamb_list2 = process(lamb_list2)

G_tri_list2 = f2.readline()
print len(G_tri_list2)
G_tri_list2 = process(G_tri_list2)

G_FD_list2 = f2.readline()
print len(G_FD_list2)
G_FD_list2 = process(G_FD_list2)

print lamb_list2[0]
print G_tri_list2[0]
print G_FD_list2[0]

print lamb_list2
print len(lamb_list2)
print len(G_tri_list2)
print len(G_FD_list)




"""
Plotting average protocell-level fitness as a function of relative protocell-level
replication rate $\lambda$ for the $\eta = 1$ case.
"""

plt.plot(lamb_list2,G_tri_list2, lw = 5., color = "b", label = r"$\langle G \rangle_{u(x,y)}$, (trimorphic)")
plt.plot(lamb_list2,G_FD_list2, color = 'g', lw = 5., ls = "--", label = r"$\langle G_{FD} \rangle_{g_{FD}(z)}$, (dimorphic, FD edge)")

eta = 0.7
G_alldimer =  0.5 * (1.0 - 0.5 * eta)
G_max = 1.0 / (4.0 * eta)
plt.axhline(y = G_alldimer, lw = 5.,ls = '--', color = 'k', alpha = 0.9)
plt.axhline(y = 0.25 / 0.7, lw = 5., ls = '--', color = 'k', alpha = 0.9)

plt.axis([0,lamb_max + 1.,0.,0.6])

plt.xlabel(r"Protocell-Level Selection Strength ($\lambda$)", fontsize = 20., labelpad = 10.)
plt.ylabel(r"Average Protocell-Level Fitness ($\langle G \rangle_u$)", fontsize = 20.)

plt.legend(loc = "lower right", frameon = False, prop = {"size" : 18})

plt.annotate(r"Maximal Fitness: $G^*$", xy = (160.0,G_max + 0.0001), xytext = (160.0,G_max + 0.12), arrowprops=dict(facecolor='black', shrink=0.05),horizontalalignment='center', fontsize = 18.)
plt.annotate(r"All-Dimer Fitness: $G(0,0)$", xy = (60.0,G_alldimer + 0.0001), xytext = (60.0,G_alldimer + 0.12), arrowprops=dict(facecolor='black', shrink=0.05),horizontalalignment='center', fontsize = 18.)
plt.xticks(fontsize = 16.)
plt.yticks(fontsize = 16.)

plt.tight_layout()


fig_file2 = protocell_folder + "/Figures/Gplottrimorphiceta0p7.png"
plt.savefig(fig_file2)


plt.show()