"""
Script used to generate Figure 5.2, which illustrates the trajectories of the average
protocell-level fitness over time for the trimorphic multilevel model for competition
between fast, slow, and dimer replicators. This figure depicts both a case in which
the all-dimer composition is a maximizer of the collective reproduction rate ($\eta = 1$,
left panel) and in which collective reproduction is maximized by a composition
featuring approximately 71 percent slow genes ($\eta = 0.7$, right panel). Each panel
presents trajectories for a variety of levels of between-protocell competition.

This figure uses data from the file "group_avg_time.txt" in the Simulation_Outputs
folder, which is generated by running the script fvfsdtrimorphicdynamics.py in the
Scripts folder.
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy.integrate as spi
import os

import matplotlib
matplotlib.use('TkAgg')


from matplotlib import rc
rc('font',**{'family':'sans-serif','sans-serif':['Helvetica']})
## for Palatino and other serif fonts use:
#rc('font',**{'family':'serif','serif':['Palatino']})
rc('text', usetex=True)

timediff = 0.015



def process(list):
	list = list.split(',')
	list = [float(a) for a in list]
	return list
	
	

script_folder = os.getcwd()
protocell_folder = os.path.dirname(script_folder)
file = protocell_folder + "/Simulation_Outputs/group_avg_time.txt"

"""
Opening text file containing the lists of average collective outcomes across all of the
time steps in the simulation.
"""
f = open(file,'r+')
holder = f.readline()
timesteps = f.readline()
print timesteps
timesteps = int(timesteps)
time_range = range(timesteps)
actual_time = [timediff * time for time in time_range]


"""
The lines used here to extract the relevant trajectories with corresponding values of 
$\lambda$ and $\eta$. The data file "group_avg_time.txt" has the parameters used to 
generate the collective payoff lists included above these lines, so it is possible to
specify different lines to get lists for different parameters by rerunning the 
finite volume simulations of fvfsdtrimorphicdynamics.py with the opion 
"quantity = grouptime".
"""
other_lines = f.readlines()
print other_lines[0]
Glamb100eta1 = process(other_lines[5])
Glamb50eta1 = process(other_lines[11])
Glamb10eta1 = process(other_lines[17])
Glamb30eta1 = process(other_lines[89])
Glamb1eta1 = process(other_lines[83])


print other_lines[91]
print other_lines[93]
Glamb10eta0p7 = process(other_lines[23])
Glamb30eta0p7 = process(other_lines[131])
Glamb100eta0p7 = process(other_lines[35])
Glamb50eta0p7 = process(other_lines[125])
Glamb1eta0p7 = process(other_lines[119])

print Glamb100eta0p7[0]
print Glamb50eta0p7[1]

#print Glamb50eta1

f.close()
#print actual_time

time_axis = time_range


"""
Plotting trajectories of average collective protocell-level fitness for $\eta =1$ case.
"""
plt.figure(1)

plt.plot(time_axis,Glamb100eta1, lw = 6., label = r"$\lambda = 100$", color = plt.cm.YlOrRd(1.))
plt.plot(time_axis,Glamb50eta1, lw = 6., label = r"$\lambda = 50$", color = plt.cm.YlOrRd(0.82))
plt.plot(time_axis,Glamb30eta1, lw = 6., label = r"$\lambda = 30$", color = plt.cm.YlOrRd(0.64))
plt.plot(time_axis,Glamb10eta1, lw = 6., label = r"$\lambda = 10$", color = plt.cm.YlOrRd(0.46))
plt.plot(time_axis,Glamb1eta1, lw = 6., label = r"$\lambda = 1$", color = plt.cm.YlOrRd(0.28))


#If Using timesteps
plt.axis([0.0,2000.,0.0,0.33])

plt.xlabel(r"Number of Timesteps (with $\Delta t = 0.015$)", fontsize = 20., labelpad = 10.)
plt.ylabel(r"Average Protocell Fitness $\langle G(\cdot) \rangle_{\rho(t,x,y)}$", fontsize = 20.)
plt.title(r"$\eta = 1$", fontsize = 24.)
#If using actual time
#plt.axis([0.0,40.,0.0,0.35])

plt.xticks(fontsize = 14.)
plt.yticks(fontsize = 14.)



plt.legend(loc = "upper center", ncol = 3)
plt.tight_layout()


print len(other_lines)

plt.savefig(protocell_folder + "/Figures/Gtriintimeeta1.png")



"""
Plotting trajectories of average collective protocell-level fitness for $\eta =0.7$ case.
"""
plt.figure(2)

plt.plot(time_axis,Glamb100eta0p7, lw = 6., label = r"$\lambda = 100$", color = plt.cm.YlOrRd(1.))
plt.plot(time_axis,Glamb50eta0p7, lw = 6., label = r"$\lambda = 50$", color = plt.cm.YlOrRd(0.82))
plt.plot(time_axis,Glamb30eta0p7, lw = 6., label = r"$\lambda = 30$", color = plt.cm.YlOrRd(0.64))
plt.plot(time_axis,Glamb10eta0p7, lw = 6., label = r"$\lambda = 10$", color = plt.cm.YlOrRd(0.46))
plt.plot(time_axis,Glamb1eta0p7, lw = 6., label = r"$\lambda = 1$", color = plt.cm.YlOrRd(0.28))

plt.axis([0.0,4000.,0.0,0.45])

plt.xlabel(r"Number of Timesteps (with $\Delta t = 0.015$)", fontsize = 20., labelpad = 10.)
plt.ylabel(r"Average Protocell Fitness $\langle G(\cdot) \rangle_{\rho(t,x,y)}$", fontsize = 20.)
plt.title(r"$\eta = 0.7$", fontsize = 24.)
#If using actual time
#plt.axis([0.0,40.,0.0,0.35])

plt.xticks(fontsize = 14.)
plt.yticks(fontsize = 14.)



plt.legend(loc = "upper center", ncol = 3)
plt.tight_layout()

plt.savefig(protocell_folder + "/Figures/Gtriintimeeta0p7.png")


plt.show()